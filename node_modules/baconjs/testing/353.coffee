B = require '../src/Bacon'

trace = (obs, name) ->
  obs.subscribeInternal (e) ->
    desc = if e.hasValue() then e.value() else '' + e
    console.log name + ':', desc

traceAll = (obss) -> trace(obs, name) for name, obs of obss

changes = new B.Bus

a = changes.map '.a'
b = changes.map '.b'

ab = B.combineAsArray a, b

f = ab.flatMapLatest (values) ->
  valuesDesc = "( #{ values.join ', ' } )"
  console.log 'inside flatMapLatest: ' + valuesDesc
  B.once 'f' + valuesDesc

fb = B.combineAsArray f, b

traceAll { a, b, ab, f, fb }

changes.push
  a: 'a_0'
  b: 'b_0'

console.log '-------------------------------'

changes.push
  a: 'a_1'
  b: 'b_1'

console.log '-------------------------------'
